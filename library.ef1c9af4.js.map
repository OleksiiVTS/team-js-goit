{"mappings":"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","sources":["src/js/upcoming-this-month/index-up-th-mon.js","src/js/js-header/header.js","src/js/js-vs/spinner-js.js","src/js/js-vs/load-more.js","src/js/js-vs/filter-library.js","src/js/catalog-net/catalog-net.js"],"sourcesContent":["// Функция для выполнения запроса к API\nasync function fetchFilmData() {\n  const apiKey = \"9073999c285844087924fd0e24160fae\";\n  const apiUrl = `https://api.themoviedb.org/3/movie/550?api_key=${apiKey}`;\n\n  try {\n    const response = await fetch(apiUrl);\n    const filmData = await response.json();\n    return filmData;\n  } catch (error) {\n    console.log(\"Ошибка при выполнении запроса к API:\", error);\n  }\n}\n\n// Функция для создания HTML разметки карточки фильма\nfunction createFilmCard(film) {\n  const cardContainer = document.querySelector(\".upcoming_film_card\");\n\n  if (film === null) {\n    // Если фильмы не найдены, отображаем сообщение\n    const messageHTML = `\n      <div class=\"no-films-message\">\n        <img src=\"ссылка_на_картинку\" alt=\"No films found\" />\n        <p>No films found.</p>\n      </div>\n    `;\n    cardContainer.innerHTML = messageHTML;\n  } else {\n    // Если фильмы найдены, создаем карточку фильма\n    const cardHTML = `\n      <div class=\"film-card\">\n        <img src=\"https://image.tmdb.org/t/p/original/${\n          film.backdrop_path\n        }\" alt=\"${film.original_title}\" />\n  <div class=\"film-info\">\n      <div class=\"info-item\">\n            <h2 class=\"film-title\">${film.original_title}</h2>\n      </div>\n\n\n<div class=\"container-features\">\n      <div class=\"column-struct\">\n        <div class=\"date-vote\">\n          <div class=\"info-item\">\n            <span class=\"release\">Release Date:</span> <span class=\"release-value release-date\">${\n              film.release_date}</span>\n          </div>\n          <div class=\"info-item\">\n            <span class=\"vote\">Vote / Votes:</span>\n            <span class=\"vote-value\">\n              <span class=\"vote-average\">${film.vote_average}</span> /\n              <span class=\"vote-count\">${film.vote_count}</span>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div class=\"column-struct\">\n        <div class=\"popularity-genre\">\n          <div class=\"info-item\">\n            <span class=\"popularity\">Popularity:</span> <span class=\"popularity-value\">${\n              film.popularity}\n            </span>\n          </div>\n          <div class=\"info-item genre-item\">\n            <span class=\"genre\">Genre:</span> <span class=\"genre-value\">${film.genres\n              .map(genre => genre.name)\n              .join(', ')}</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"description-item\">\n        <span class=\"description-about\">About:</span> <span class=\"about-value\">${\n          film.overview\n        }</span>\n      </div>\n</div>\n    \n\n\n         \n          <button class=\"button-rem-me\">Add to My Library</button>\n          \n        </div>\n    </div>\n    `;\n\n    cardContainer.innerHTML = cardHTML;\n\n    // Добавляем обработчик события для кнопки после создания разметки\n    const addButton = document.querySelector(\".button-rem-me\");\n    addButton.addEventListener(\"click\", toggleLibraryFilm);\n\n    // Изменяем формат даты. При изменении назания классов в разметке, изменить класс ниже\n    const releaseDateElement = document.querySelector(\".release-value.release-date\");\n    const releaseDate = film.release_date;\n    const formattedDate = formatDate(releaseDate);\n    releaseDateElement.textContent = formattedDate;\n  }\n}\n\n// Функция для преобразования формата даты\nfunction formatDate(dateString) {\n  const date = new Date(dateString);\n  const day = date.getDate().toString().padStart(2, \"0\");\n  const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n  const year = date.getFullYear();\n\n  return `${day}.${month}.${year}`;\n}\n\n\n// Функция для обработки нажатия на кнопку добавления/удаления фильма из My Library\nfunction toggleLibraryFilm() {\n  const addButton = document.querySelector(\".button-rem-me\");\n  const filmTitle = document.querySelector(\".film-card img\").alt;\n  const libraryFilms = JSON.parse(localStorage.getItem(\"libraryFilms\")) || [];\n\n  if (addButton.textContent === \"Add to My Library\") {\n    addButton.textContent = \"Remove from My Library\";\n    libraryFilms.push(filmTitle);\n  } else {\n    addButton.textContent = \"Add to My Library\";\n    const filmIndex = libraryFilms.indexOf(filmTitle);\n    if (filmIndex > -1) {\n      libraryFilms.splice(filmIndex, 1);\n    }\n  }\n\n  localStorage.setItem(\"libraryFilms\", JSON.stringify(libraryFilms));\n}\n\n// Вызываем функцию для получения данных о фильме и создания карточки\nfetchFilmData().then((filmData) => {\n  console.log(\"Получены данные о фильме:\", filmData);\n  createFilmCard(filmData);\n});\n","const menuBtnEl = document.querySelector('.header-menu');\nconst mobileMenuEl = document.querySelector('.mobile-menu-wrap');\nconst mobileBackdropEl = document.querySelector('.mobile-menu-backdrop');\nconst bodyEl = document.querySelector('body');\nconst currentURL = window.location.href;\nconst navLinks = document.getElementsByClassName('menu-item-txt');\nmenuBtnEl.addEventListener('click', onMenuBtnClick);\n\nconsole.log(currentURL);\nfor (let i = 0; i < navLinks.length; i += 1) {\n  let linkURL = navLinks[i].getAttribute('href');\n  console.log(linkURL);\n  if (currentURL.includes(linkURL)) {\n    navLinks[i].classList.add('current-page');\n  }\n}\nfunction onMenuBtnClick() {\n  mobileMenuEl.classList.remove('hidden');\n  mobileBackdropEl.classList.remove('hidden');\n\n  setTimeout(() => {\n    document.addEventListener('click', onMenuOpenClick);\n    document.addEventListener('keydown', onMenuOpenKeypress);\n    bodyEl.classList.add('modal-opened');\n  }, 500);\n}\n\nfunction onMenuOpenClick(event) {\n  if (event.target !== mobileMenuEl) {\n    closeMobileMenu();\n  }\n}\n\nfunction onMenuOpenKeypress(event) {\n  if (event.key === 'Escape') {\n    closeMobileMenu();\n  }\n}\n\nfunction closeMobileMenu() {\n  mobileMenuEl.classList.add('hidden');\n  mobileBackdropEl.classList.add('hidden');\n  bodyEl.classList.remove('modal-opened');\n  document.removeEventListener('click', onMenuOpenClick);\n  document.removeEventListener('keydown', onMenuOpenKeypress);\n}\n\n// THEME SWITCHING\n\nconst dayThemeRefs = {\n  headerEl: document.querySelector('.header-container'),\n  mobileMenuModalEl: document.querySelector('.mobile-menu-wrap'),\n  headerMenuEL: document.querySelector('.header-menu'),\n  headerTitleEl: document.querySelector('.header-title'),\n  menuItemEls: [...document.getElementsByClassName('menu-item-txt')],\n};\n\nconst {\n  headerEl,\n  mobileMenuModalEl,\n  headerMenuEL,\n  headerTitleEl,\n  menuItemEls,\n} = dayThemeRefs;\n\nconst themeSwitchEl = document.getElementById('checkbox');\nthemeSwitchEl.addEventListener('change', onThemeSwitchToggle);\n\nsetCurrentTheme();\n\nfunction onThemeSwitchToggle() {\n  localStorage.setItem(\n    'ui-theme',\n    localStorage.getItem('ui-theme') === 'dark' ? 'light' : 'dark'\n  );\n  switchThemeColors();\n}\n\nfunction switchThemeColors() {\n  const toggleClass = (element, className, addClass) => {\n    if (addClass) {\n      element.classList.add(className);\n    } else {\n      element.classList.remove(className);\n    }\n  };\n\n  toggleClass(bodyEl, 'body-white-background', !themeSwitchEl.checked);\n  toggleClass(headerEl, 'header-white-background', !themeSwitchEl.checked);\n  toggleClass(\n    mobileMenuModalEl,\n    'secondary-white-background',\n    !themeSwitchEl.checked\n  );\n  toggleClass(headerMenuEL, 'day-dark-text', !themeSwitchEl.checked);\n  toggleClass(headerTitleEl, 'day-secondary-black', !themeSwitchEl.checked);\n\n  menuItemEls.forEach(item => {\n    toggleClass(item, 'day-dark-text', !themeSwitchEl.checked);\n  });\n}\n\nfunction setCurrentTheme() {\n  if (!localStorage.getItem('ui-theme')) {\n    localStorage.setItem('ui-theme', 'dark');\n  } else if (localStorage.getItem('ui-theme') === 'dark') {\n    themeSwitchEl.checked = true;\n  } else {\n    localStorage.setItem('ui-theme', 'light');\n    themeSwitchEl.checked = false;\n    switchThemeColors();\n  }\n}\n","const spinnerCinema = document.querySelector('.loader-cinemania')\n\nfunction disableSpinner() {\n  spinnerCinema.classList.add('is-hidden')\n}\n\nfunction enableSpinner() {\n  spinnerCinema.classList.remove('is-hidden')\n}\n\nexport {disableSpinner, enableSpinner}","const loadMoreBtn = document.querySelector('.load-more')\n\n// console.log(loadMoreBtn)\n\n// loadMoreBtn.addEventListener('click' onLoadMore)\n\nfunction enableBtnLoadMore() {\n  loadMoreBtn.classList.remove('is-hidden')\n}\n\nfunction disableBtnLoadMore() {\n  loadMoreBtn.classList.add('is-hidden')\n}\n\n","const libraryFilter = document.querySelector('.library-filter')\nconsole.log(libraryFilter)\n\n// myFilter.addEventListener('input', filterLibrery)\n\n// function filterLibrery (evt) {\n//   const ddd = evt.currentTarget.value\n \n//   const genres = localStorage.getItem(\"genres\");\n//   if(genres.includes(ddd)) {\n//     console.log('ура')\n//   }\n// console.log(genres)\n// }","\nconst API_KEY = '45b8ac4dc4bcb28ba01349825b9d5176';\nconst URL = 'https://api.themoviedb.org/3/trending/all/week';\n\nasync function onFetchData() {\n  try {\n    const response = await fetch(`${URL}?api_key=${API_KEY}&backdrop_path&original_title&title=&popularity&language=en-US`)\n  const data = await response.json()\n   \n    if (!response.ok) {\n      throw new Error(response.statusText);\n    } else {\n      return data;\n    }\n  }  catch (error) {\n    console.log('Помилка при запиті на сервер', error)\n  }\n}\nonFetchData()\n  .then((data) => {\n    // console.log(\"Отримання даних про фильми тижня:\", data.results);\n    onCreateMarkupCard(data.results)\n  })\n\n    function onCreateMarkupCard(data) {\n      const catalogGalleryEl = document.querySelector('.catalog-gallery');\n      catalogGalleryEl.insertAdjacentHTML('beforeend', data.reduce((card, { poster_path, original_title, title, vote_average }) => {\n        return (card + `\n  <div class=\"movie-card\">\n  <img class= \"gallery__image\" src=\"${'https://image.tmdb.org/t/p/w300'+poster_path}\" alt=\"${original_title}\" loading=\"lazy\" />\n  <div class=\"info overlay\">\n    <p class=\"info-item\">\n      <b>Назва:\n      ${title}</b>\n      </p>\n      <p class=\"info-item\">\n      <b>Рейтинг:\n      ${vote_average}</b>\n    </p>\n  </div>\n  </div>\n  `)\n      }, ''\n));\n};\n\n"],"names":["$f49e43cdbfc0df5e$var$createFilmCard","film","cardContainer","document","querySelector","messageHTML","innerHTML","cardHTML","backdrop_path","original_title","release_date","vote_average","vote_count","popularity","genres","map","genre","name","join","overview","addEventListener","$f49e43cdbfc0df5e$var$toggleLibraryFilm","releaseDateElement","formattedDate","dateString","date","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","$f49e43cdbfc0df5e$var$formatDate","textContent","addButton","filmTitle","alt","libraryFilms","JSON","parse","localStorage","getItem","push","filmIndex","indexOf","splice","setItem","stringify","async","response","fetch","json","error","console","log","$f49e43cdbfc0df5e$var$fetchFilmData","then","filmData","$1e62ba36d723762e$var$menuBtnEl","$1e62ba36d723762e$var$mobileMenuEl","$1e62ba36d723762e$var$mobileBackdropEl","$1e62ba36d723762e$var$bodyEl","$1e62ba36d723762e$var$currentURL","window","location","href","$1e62ba36d723762e$var$navLinks","getElementsByClassName","classList","remove","setTimeout","$1e62ba36d723762e$var$onMenuOpenClick","$1e62ba36d723762e$var$onMenuOpenKeypress","add","i","length","linkURL","getAttribute","includes","event","target","$1e62ba36d723762e$var$closeMobileMenu","key","removeEventListener","$1e62ba36d723762e$var$dayThemeRefs","headerEl","mobileMenuModalEl","headerMenuEL","headerTitleEl","menuItemEls","$1e62ba36d723762e$var$headerEl","$1e62ba36d723762e$var$mobileMenuModalEl","$1e62ba36d723762e$var$headerMenuEL","$1e62ba36d723762e$var$headerTitleEl","$1e62ba36d723762e$var$menuItemEls","$1e62ba36d723762e$var$themeSwitchEl","getElementById","$1e62ba36d723762e$var$switchThemeColors","toggleClass","element","className","addClass","checked","forEach","item","$73e5bb4eb0165328$var$libraryFilter","data","ok","Error","statusText","$3c44096988878ef0$var$onFetchData","insertAdjacentHTML","reduce","card","poster_path","title","$3c44096988878ef0$var$onCreateMarkupCard","results"],"version":3,"file":"library.ef1c9af4.js.map"}