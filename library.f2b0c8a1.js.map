{"mappings":"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","sources":["src/js/js-vs/genres-library.js"],"sourcesContent":["import GenreList from '../class/GenreList.js';\nimport { styleModal } from \"../js-header/header.js\";\n\nconst cl_Genres = new GenreList({\n  selector: '.select',\n  url: '/genre/movie/list',\n  query: 'language=en',\n});\ncl_Genres.getGenreList();\n\n// convert genres\nfunction convertId_to_Name(aGenre) {\n  list = cl_Genres.importFromLS();\n  if (!aGenre) { \n    return\n  }\n\n  const result = aGenre.map(item => {\n    const obj = list.find(el => el.id === item);\n    return obj ? obj.name : null;\n  });\n\n  return result.join(', ');\n}\n\nconst boxLibraryCinema = document.querySelector('.library');\nlet libraryCinema = JSON.parse(localStorage.getItem('libraryFilms'));\n\nconst select = document.querySelector('.library-filter');\nif (select) {\n  select.addEventListener('input', onLibreryFilter);\n}\n// слухач події клік на селекторі \n// window.addEventListener('click', (event) => {\n//   if ( event.view.location.pathname === '/library.html' ||\n//        event.view.location.pathname === '/team-js-goit/library.html') {\n         \n//     return document\n//     .querySelector('.library-filter')\n//     .addEventListener('input', onLibreryFilter);\n//   }\n//   return;\n// });\n\nonMarkup(libraryCinema);\n\n// отримуемо потрібний масив даних для розмітки і виводу на сторінку\nfunction onLibreryFilter(event) {\n  const genre = Number(select.value);\n\n  try {\n    \n    libraryCinema = JSON.parse(localStorage.getItem('libraryFilms'));\n    if(libraryCinema.length === 0) {\n      throw new Error(\"масив пустий\")\n    }\n\n\n    if (isNaN(genre)){\n      onMarkup(libraryCinema)\n      return\n    }\n\n    const filter = libraryCinema.filter(element => {\n      if (element.genres) {\n        return element.genres.some(item => item.id === genre);\n      } else {\n        return element.genre_ids.some(item => item === genre);\n      }\n    });\n  \n    onMarkup(filter);\n  } catch (error) {\n    onError(error);\n  }\n}\n\n// створення розмітки\nfunction onMarkup(data){\n  const cards = createCard(data)\n  update(cards)\n  managerModal();\n  showEmptyLibrary();\n}\n\n// вивід даних на сторінку\nfunction update(data) {\n  if (boxLibraryCinema) {\n    boxLibraryCinema.innerHTML = '';\n    boxLibraryCinema.insertAdjacentHTML(\"beforeend\", data);\n  }\n}\n\n// обгортання елементу масиву хтмл-кодом\nfunction createCard(data){\n  return data.reduce(\n    (acc, item) => {\n     return acc + TemplateMovieCard(item)\n   }, \"\");\n}\n\n// шаблон\nfunction TemplateMovieCard( data ) {\n  const { \n    poster_path, \n    original_title, \n    title, \n    vote_average, \n    release_date, \n    id\n  } = data;\n\n  \n  let aGenres = null;\n  if (data.genres) { \n    aGenres = data.genres.map(e => e.name).slice(0, 2).join(', ')\n  } else {\n    aGenres = convertId_to_Name(data.genre_ids.slice(0, 2))\n  }\n  let strGenres = aGenres\n  if (aGenres.length > 20) {\n    strGenres = aGenres.split(',')[0];\n  }\n\n  return `<a href=\"\" data-id-movie=\"${id ? id: 0}\">\n  <div class=\"movie-card overlay-card\" data-id-movie=\"${id ? id: 0}\">\n      <img class=\"gallery__image\" src=\"${\n        'https://image.tmdb.org/t/p/w400' + poster_path\n      }\" alt=\"${title ? title : original_title}\" loading=\"lazy\"/>\n      <div class=\"gallery__up_image\"></div>\n      <div class=\"catalog_info\">\n        <h2 class=\"catalog_title\">\n        ${title ? title : original_title}\n        </h2>\n          <div class=\"ganres_rating\">\n            <p class=\"catalog_genres\">\n            ${strGenres} | ${release_date.slice(0, 4)}\n            </p>\n            <div class=\"rating\">\n            <div class=\"rating__body\">\n              <div class=\"rating__active\" style=\"width: ${\n                vote_average.toFixed(1) * 10\n              }%;\"></div>\n              <div class=\"rating__items\">\n                <input type=\"radio\" class=\"rating__item\" name=\"rating\" value=\"1\">\n                <input type=\"radio\" class=\"rating__item\" name=\"rating\" value=\"2\">\n                <input type=\"radio\" class=\"rating__item\" name=\"rating\" value=\"3\">\n                <input type=\"radio\" class=\"rating__item\" name=\"rating\" value=\"4\">\n                <input type=\"radio\" class=\"rating__item\" name=\"rating\" value=\"5\">\n              </div>\n            </div>\n          </div>\n          </div>\n      </div>\n      </div>\n      </a>`;\n}\n\n// если пустой список\nfunction emptyLibraryMarkup() {\n  if (libraryCinema.length === 0) {\n    document.querySelector('.library-filter').style.display = 'none';\n\n    return `<div class=\"empty-library\"> \n      <p class=\"empty-library-text\">OOPS...<br/> We are very sorry! <br/> You don’t have any movies in your library.</p>\n      <button type=\"button\" class=\"button-watch-trailer\">\n        <a class=\"hero-href\"  href=\"../src/partials/catalog/catalog-catalog.html\">Search movie</a>\n      </button>\n    </div>`;\n  }\n}\n\nfunction showEmptyLibrary() {\n  if (boxLibraryCinema) {\n    const result = emptyLibraryMarkup();\n    if (result) {\n      boxLibraryCinema.innerHTML = '';\n      boxLibraryCinema.insertAdjacentHTML('beforeend', result);\n    }\n  }\n}\n\nfunction onError(error) {\n  console.log(error);\n}\n\n//=======\nfunction createModal(data) {\n    const {\n      title,\n      original_title,\n      poster_path,\n      vote_average,\n      vote_count,\n      popularity,\n      overview,\n      genre_ids,\n    } = data;\n\n    let btn = 'Add to My Library';\n    const libraryFilms = JSON.parse(localStorage.getItem('libraryFilms')) || [];\n\n    for (const film of libraryFilms) {\n      if (film.title === title || film.original_title === title) {\n        btn = 'Remove from My Library';\n      }\n    }\n\n    let aGenres = null;\n    if (data.genres) { \n      aGenres = data.genres.map(e => e.name).slice(0, 2).join(', ')\n    } else {\n      aGenres = convertId_to_Name(data.genre_ids.slice(0, 2))\n    }\n    let strGenres = aGenres\n    if (aGenres.length > 20) {\n      strGenres = aGenres.split(',')[0];\n    }\n\n    const modal = document.getElementById('moreDetails');\n    modal.classList.remove('more-details-is-hidden');\n\n    modal.innerHTML = `\n      <div class=\"more-details-modal\">\n        <div class=\"close-button-box\">\n          <button class=\"more-details-close-button\" id=\"closeDetails\" type=\"button\">X</button>\n        </div>\n        <div class=\"details-wrapper\">\n          <div class=\"more-details-img-box\">\n            <img width=\"380px\" class=\"more-detail-img\" src=\"https://image.tmdb.org/t/p/original/${poster_path}\" alt=\"${title}\" />\n          </div>\n          <div class=\"more-details-info\">\n            <h2 class=\"film-title\">${title ? title : original_title}</h2>\n            <table>\n              <tr>\n                <td class=\"table-row table-column-name\">Vote / Votes:</td>\n                <td><span class=\"vote-average\">${vote_average}</span> / <span class=\"vote-count\">${vote_count}</span></td>\n              </tr>\n              <tr>\n                <td class=\"table-row table-column-name\">Popularity:</td>\n                <td>${popularity}</td>\n              </tr>\n              <tr>\n                <td class=\"table-row table-column-name\">Genre:</td>\n                <td>${strGenres}</td>\n              </tr>\n            </table>\n            <span class=\"description-about\">About:</span>\n            <span class=\"more-details-about\">${overview}</span>\n            <div class=\"more-details-adml-box\">\n              <button id=\"addToLibraryButton\" class=\"button-rem-me\">${btn}</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n\n    // close modal window\n    const closeBtn = modal.querySelector('#closeDetails');\n    closeBtn.addEventListener('click', () => {\n      document.body.style.overflow = 'visible';\n      modal.classList.add('more-details-is-hidden');\n\n      onLibreryFilter();\n      showEmptyLibrary();\n    });\n\n    const addToLibraryButton = modal.querySelector('#addToLibraryButton');\n    addToLibraryButton.addEventListener('click', () => {\n      addToLibrary(data);\n    });\n  }\n\n  function addToLibrary(film) {\n    try {\n      const addButton = document.getElementById('addToLibraryButton');\n      const libraryFilms =\n        JSON.parse(localStorage.getItem('libraryFilms')) || [];\n\n      const filmTitle = (film.title || film.original_title);\n\n      if (addButton.textContent === 'Add to My Library') {\n        addButton.textContent = 'Remove from My Library';\n\n        libraryFilms.push(film);\n        localStorage.setItem('libraryFilms', JSON.stringify(libraryFilms));\n      } else {\n        addButton.textContent = 'Add to My Library';\n\n        const index = libraryFilms.findIndex(\n          filmItem => filmItem.title === filmTitle || filmItem.original_title === filmTitle\n        );\n        if (index !== -1) {\n          libraryFilms.splice(index, 1);\n          localStorage.setItem('libraryFilms', JSON.stringify(libraryFilms));\n\n          // libraryCinema = JSON.parse(localStorage.getItem('libraryFilms'))\n          // console.log(libraryCinema);\n          // onMarkup(libraryCinema)\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  function managerModal() {\n    // якщо області виводу не має, значить не та сторінка\n    if (!boxLibraryCinema) {\n      return;\n    }\n\n    const movieCards = boxLibraryCinema.querySelectorAll('.movie-card');\n\n    movieCards.forEach(card => {\n      const movieId = Number(card.dataset.idMovie);\n\n      let list = libraryCinema;\n      if (list.length === 0) { \n        throw Error(\"Список бібліотеки пустий\")\n        return\n      }\n      const data = list.filter(item => item.id === movieId);\n\n      // console.log(data);\n      if (data.length === 0) {\n        throw Error('у об`єктів повинні бути id')\n        return\n      }\n      card.addEventListener('click', event => {\n        event.preventDefault();\n        document.body.style.overflow = 'hidden';\n        createModal(data[0]);\n        setTimeout(styleModal, 0) \n      });\n    });\n  }"],"names":["$kicot","parcelRequire","$be55307d2d116361$var$cl_Genres","default","selector","url","query","$be55307d2d116361$var$convertId_to_Name","aGenre","list","importFromLS","map","item","obj","find","el","id","name","join","getGenreList","$be55307d2d116361$var$boxLibraryCinema","document","querySelector","$be55307d2d116361$var$libraryCinema","JSON","parse","localStorage","getItem","$be55307d2d116361$var$select","$be55307d2d116361$var$onLibreryFilter","event","genre","Number","value","length","Error","isNaN","$be55307d2d116361$var$onMarkup","filter","element","genres","some","genre_ids","error","console","log","$be55307d2d116361$var$onError","data","cards","reduce","acc","poster_path","original_title","title","vote_average","release_date","aGenres","e","slice","strGenres","split","concat","toFixed","$be55307d2d116361$var$TemplateMovieCard","$be55307d2d116361$var$createCard","innerHTML","insertAdjacentHTML","$be55307d2d116361$var$update","querySelectorAll","forEach","card","movieId","dataset","idMovie","addEventListener","preventDefault","body","style","overflow","vote_count","popularity","overview","btn","libraryFilms","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","film","err","return","modal","getElementById","classList","remove","add","$be55307d2d116361$var$showEmptyLibrary","addButton","filmTitle","textContent","push","setItem","stringify","index","findIndex","filmItem","splice","$be55307d2d116361$var$addToLibrary","$be55307d2d116361$var$createModal","setTimeout","$kjABN","styleModal","$be55307d2d116361$var$managerModal","result","display","$be55307d2d116361$var$emptyLibraryMarkup"],"version":3,"file":"library.f2b0c8a1.js.map"}